[versions]
# Plugin versions
kotlin = "2.2.0"
kotlinter = "5.2.0"
buildconfig = "5.6.7"
versions = "0.52.0"

# Library versions
cloud = "1.25.1"
commons = "1.14.0"
css = "2025.6.14"
exposed = "0.61.0"
flexmark = "0.64.8"
github-api = "1.324"
gson = "2.13.1"
hikari = "7.0.1"
java-script = "2.0.0"
khealth = "3.0.1"
kotest = "6.0.0.M4"
kotest-ktor = "6.0.0.M16"
ktor = "3.2.3"
logback = "1.5.18"
logging = "7.0.7"
pgjdbc = "0.8.9"
postgres = "42.7.7"
prometheus = "0.16.0"
proxy = "2.4.0"
sendgrid = "5.0.0-rc.1"
serialization = "1.9.0"
utils = "2.4.0"

[libraries]
# Kotlin
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-scripting-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }

# Serialization
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Common Utils
core-utils = { module = "com.github.pambrose.common-utils:core-utils", version.ref = "utils" }
ktor-server-utils = { module = "com.github.pambrose.common-utils:ktor-server-utils", version.ref = "utils" }
ktor-client-utils = { module = "com.github.pambrose.common-utils:ktor-client-utils", version.ref = "utils" }
script-utils-common = { module = "com.github.pambrose.common-utils:script-utils-common", version.ref = "utils" }
script-utils-python = { module = "com.github.pambrose.common-utils:script-utils-python", version.ref = "utils" }
script-utils-java = { module = "com.github.pambrose.common-utils:script-utils-java", version.ref = "utils" }
script-utils-kotlin = { module = "com.github.pambrose.common-utils:script-utils-kotlin", version.ref = "utils" }
service-utils = { module = "com.github.pambrose.common-utils:service-utils", version.ref = "utils" }
prometheus-utils = { module = "com.github.pambrose.common-utils:prometheus-utils", version.ref = "utils" }
exposed-utils = { module = "com.github.pambrose.common-utils:exposed-utils", version.ref = "utils" }

# Prometheus
prometheus-proxy = { module = "com.github.pambrose:prometheus-proxy", version.ref = "proxy" }
simple-client = { module = "io.prometheus:simpleclient", version.ref = "prometheus" }

# Script Engine
script-engine = { module = "ch.obermuhlner:java-scriptengine", version.ref = "java-script" }

# CSS
css = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version.ref = "css" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-rate-limit = { module = "io.ktor:ktor-server-rate-limit", version.ref = "ktor" }
ktor-html = { module = "io.ktor:ktor-server-html-builder", version.ref = "ktor" }
ktor-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-metrics = { module = "io.ktor:ktor-server-metrics", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }
ktor-calllogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }

# KHealth
khealth = { module = "dev.hayden:khealth", version.ref = "khealth" }

# Database
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-jodatime = { module = "org.jetbrains.exposed:exposed-jodatime", version.ref = "exposed" }
pgjdbc = { module = "com.impossibl.pgjdbc-ng:pgjdbc-ng-all", version.ref = "pgjdbc" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
socket = { module = "com.google.cloud.sql:postgres-socket-factory", version.ref = "cloud" }

# Other
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
sendgrid = { module = "com.sendgrid:sendgrid-java", version.ref = "sendgrid" }
commons = { module = "org.apache.commons:commons-text", version.ref = "commons" }
flexmark = { module = "com.vladsch.flexmark:flexmark", version.ref = "flexmark" }
github = { module = "org.kohsuke:github-api", version.ref = "github-api" }

# Logging
logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "logging" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Testing
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-ktor = { module = "io.kotest:kotest-assertions-ktor", version.ref = "kotest-ktor" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
